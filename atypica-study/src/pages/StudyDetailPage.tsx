import { useParams, Link } from 'react-router-dom';
import { useState } from 'react';
import { mockStudies, mockAgents, mockConversations } from '../data/mockData';
import ChatInterface from '../components/ChatInterface';
import { Message } from '../types';
import { v4 as uuidv4 } from 'uuid';

export default function StudyDetailPage() {
  const { id } = useParams<{ id: string }>();
  const study = mockStudies.find(s => s.id === id);
  
  const [activeTab, setActiveTab] = useState<'overview' | 'conversation'>('overview');
  const [selectedAgentId, setSelectedAgentId] = useState<string | null>(null);
  const [messages, setMessages] = useState<Message[]>([]);
  const [conversationStarted, setConversationStarted] = useState(false);
  
  if (!study) {
    return (
      <div className="container mx-auto px-4 py-12 text-center">
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">Study not found</h2>
        <p className="text-gray-600 dark:text-gray-300 mb-6">The study you're looking for doesn't exist or has been removed.</p>
        <Link to="/" className="btn btn-primary">Back to Studies</Link>
      </div>
    );
  }

  const handleStartConversation = (agentId: string) => {
    const agent = mockAgents.find(a => a.id === agentId);
    if (!agent) return;
    
    // Check if there's an existing conversation
    const existingConversation = mockConversations.find(c => c.studyId === study.id && c.agentId === agentId);
    
    if (existingConversation) {
      setMessages(existingConversation.messages);
    } else {
      // Create a new conversation with a system message
      const systemMessage: Message = {
        id: uuidv4(),
        role: 'system',
        content: `You are now chatting with ${agent.name}. This conversation is part of the "${study.title}" study.`,
        timestamp: new Date().toISOString()
      };
      setMessages([systemMessage]);
    }
    
    setSelectedAgentId(agentId);
    setActiveTab('conversation');
    setConversationStarted(true);
  };

  const handleSendMessage = (content: string) => {
    // Add user message
    const userMessage: Message = {
      id: uuidv4(),
      role: 'user',
      content,
      timestamp: new Date().toISOString()
    };
    
    setMessages(prev => [...prev, userMessage]);
    
    // Simulate agent response after a short delay
    setTimeout(() => {
      const agentMessage: Message = {
        id: uuidv4(),
        role: 'agent',
        content: `This is a simulated response from the agent. In a real application, this would be generated by an AI model based on your message: "${content}"`,
        timestamp: new Date().toISOString()
      };
      
      setMessages(prev => [...prev, agentMessage]);
    }, 1000);
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-6">
        <Link to="/" className="text-primary-600 hover:text-primary-800 flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clipRule="evenodd" />
          </svg>
          Back to Studies
        </Link>
      </div>
      
      <div className="flex flex-col lg:flex-row gap-8">
        <div className="lg:w-1/3">
          <img 
            src={study.imageUrl} 
            alt={study.title} 
            className="w-full h-64 object-cover rounded-lg shadow-md"
          />
          
          <div className="mt-6 bg-white dark:bg-gray-800 rounded-lg shadow-md p-4">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">{study.title}</h2>
            
            <div className="mt-2 flex items-center">
              <span className={`px-2 py-1 text-xs rounded-full ${
                study.status === 'active' ? 'bg-green-100 text-green-800' : 
                study.status === 'completed' ? 'bg-blue-100 text-blue-800' : 
                'bg-gray-100 text-gray-800'
              }`}>
                {study.status.charAt(0).toUpperCase() + study.status.slice(1)}
              </span>
              <span className="ml-4 text-sm text-gray-500 dark:text-gray-400">{study.participants} participants</span>
              <span className="ml-4 text-sm text-gray-500 dark:text-gray-400">{study.duration}</span>
            </div>
            
            <div className="mt-4 flex flex-wrap gap-1">
              {study.tags.map((tag, index) => (
                <span key={index} className="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 text-xs px-2 py-1 rounded">
                  {tag}
                </span>
              ))}
            </div>
            
            <p className="mt-4 text-gray-600 dark:text-gray-300">{study.description}</p>
            
            <div className="mt-6">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-3">Available Agents</h3>
              <div className="space-y-3">
                {mockAgents.map(agent => (
                  <div key={agent.id} className="border rounded-md p-3 hover:bg-gray-50 dark:hover:bg-gray-700">
                    <div className="flex items-center">
                      <img 
                        src={agent.imageUrl} 
                        alt={agent.name} 
                        className="w-10 h-10 rounded-full object-cover"
                      />
                      <div className="ml-3">
                        <h4 className="text-sm font-medium text-gray-900 dark:text-white">{agent.name}</h4>
                        <p className="text-xs text-gray-500 dark:text-gray-400 line-clamp-1">{agent.description}</p>
                      </div>
                    </div>
                    <button
                      onClick={() => handleStartConversation(agent.id)}
                      className="mt-2 w-full btn btn-primary text-sm py-1"
                    >
                      Chat with this Agent
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
        
        <div className="lg:w-2/3">
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <div className="border-b border-gray-200 dark:border-gray-700">
              <nav className="flex">
                <button
                  onClick={() => setActiveTab('overview')}
                  className={`px-4 py-3 text-sm font-medium ${
                    activeTab === 'overview'
                      ? 'border-b-2 border-primary-500 text-primary-600'
                      : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  Study Overview
                </button>
                <button
                  onClick={() => setActiveTab('conversation')}
                  className={`px-4 py-3 text-sm font-medium ${
                    activeTab === 'conversation'
                      ? 'border-b-2 border-primary-500 text-primary-600'
                      : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                  disabled={!conversationStarted}
                >
                  Conversation
                </button>
              </nav>
            </div>
            
            <div className="p-4 h-[600px]">
              {activeTab === 'overview' ? (
                <div className="h-full overflow-y-auto">
                  <h2 className="text-xl font-bold text-gray-900 dark:text-white mb-4">About this Study</h2>
                  <p className="text-gray-600 dark:text-gray-300 mb-6">
                    This study aims to explore how AI agents can assist with complex tasks and decision-making processes.
                    Participants will interact with different AI agents and provide feedback on their experiences.
                  </p>
                  
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-3">Study Details</h3>
                  <div className="space-y-2 mb-6">
                    <div className="flex">
                      <span className="w-32 text-gray-500 dark:text-gray-400">Duration:</span>
                      <span className="text-gray-900 dark:text-white">{study.duration}</span>
                    </div>
                    <div className="flex">
                      <span className="w-32 text-gray-500 dark:text-gray-400">Participants:</span>
                      <span className="text-gray-900 dark:text-white">{study.participants}</span>
                    </div>
                    <div className="flex">
                      <span className="w-32 text-gray-500 dark:text-gray-400">Created:</span>
                      <span className="text-gray-900 dark:text-white">{new Date(study.createdAt).toLocaleDateString()}</span>
                    </div>
                    <div className="flex">
                      <span className="w-32 text-gray-500 dark:text-gray-400">Last Updated:</span>
                      <span className="text-gray-900 dark:text-white">{new Date(study.updatedAt).toLocaleDateString()}</span>
                    </div>
                  </div>
                  
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-3">Instructions</h3>
                  <ol className="list-decimal pl-5 space-y-2 text-gray-600 dark:text-gray-300">
                    <li>Select an AI agent from the list on the left.</li>
                    <li>Start a conversation with the agent about the study topic.</li>
                    <li>Try to explore the agent's capabilities and limitations.</li>
                    <li>After the conversation, you'll be asked to provide feedback on your experience.</li>
                  </ol>
                  
                  <div className="mt-8 p-4 bg-yellow-50 dark:bg-yellow-900 rounded-md">
                    <h4 className="text-sm font-semibold text-yellow-800 dark:text-yellow-200">Important Note</h4>
                    <p className="mt-1 text-sm text-yellow-700 dark:text-yellow-300">
                      This is a research study. All conversations will be recorded and analyzed for research purposes.
                      Your participation is voluntary, and you can exit the study at any time.
                    </p>
                  </div>
                </div>
              ) : (
                <div className="h-full">
                  {selectedAgentId ? (
                    <ChatInterface 
                      messages={messages} 
                      onSendMessage={handleSendMessage} 
                    />
                  ) : (
                    <div className="h-full flex items-center justify-center">
                      <div className="text-center">
                        <p className="text-gray-500 dark:text-gray-400 mb-4">Select an agent to start a conversation</p>
                      </div>
                    </div>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}